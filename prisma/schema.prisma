generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mysql"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum OAuthProvider {
  discord
  github
  google
}

model User {
  id                     String    @id @default(uuid())
  name                   String
  email                  String    @unique
  pendingEmail           String?
  password               String?
  profile                String?
  salt                   String?
  role                   UserRole  @default(USER)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  twoFactorEnabled       Boolean   @default(false)
  twoFactorSecret        String?
  emailVerified          Boolean   @default(false)
  emailVerificationCode  String?
  emailVerificationExpires DateTime?
  resetPasswordToken     String?
  resetPasswordExpires   DateTime?
  disabled               Boolean  @default(false)

  oAuthAccounts UserOAuthAccount[]
  tempSessions  TempSession[]
  sessions      Session[]
}

model UserOAuthAccount {
  userId           String
  provider         OAuthProvider
  providerAccountId String @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([providerAccountId, provider])
}

model TempSession {
  token   String   @id
  userId  String
  expires DateTime
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  token   String   @id
  userId  String
  expires DateTime
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Provider {
  id        String   @id @default(uuid())
  name      String   @unique
  clientId  String?
  clientSecret String?
  enabled   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SiteSettings {
  id          String   @id @default(uuid())
  key         String   @unique
  value       String   @db.Text
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
